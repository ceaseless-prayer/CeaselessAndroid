buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/'}
    }

    dependencies {
        //noinspection GradleDynamicVersion
    }
}

apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'com.android.application'
//apply plugin: 'findbugs'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'realm-android'

repositories {
    mavenCentral()
}

Properties localProps = new Properties()
File propsFile = new File('./local.properties')
if (propsFile.isFile()) {
    localProps.load(new FileInputStream(file('../local.properties')))
    if (localProps['keystore.file']) {
        def keystoreFile = file(localProps['keystore.file'])
        def keystorePassword = localProps['keystore.password']
        def keystoreKeyPassword = localProps['keystore.keyPassword']

        android {
            signingConfigs {
                production {
                    keyAlias 'production'
                    storeFile keystoreFile
                    storePassword keystorePassword
                    keyPassword keystoreKeyPassword
                }
            }

            buildTypes {
                signedRelease {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                    signingConfig signingConfigs.production
                }
            }
        }
    }
}

android {
    namespace "org.theotech.ceaselessandroid"
    compileSdkVersion 34

    defaultConfig {
        applicationId "org.theotech.ceaselessandroid"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 21
        versionName "1.0.7"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }
    lintOptions {
        disable 'PrivateResource',
                'MissingTranslation',
                'AllowBackup',
                'UselessLeaf',
                'UselessParent',
                'IconColors',
                'IconLocation',
                'IconDensities',
                'ButtonStyle',
                'HardcodedText',
                'RtlSymmetry',
                'RtlSymmetry',
                'RtlHardcoded'
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        buildConfig = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }
    implementation platform('com.google.firebase:firebase-bom:33.1.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.activity:activity:1.9.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'com.github.codechimp-org.apprater:library:1.0.30'
    implementation 'com.google.guava:guava:27.0.1-android'
    implementation 'com.jakewharton:butterknife:10.1.0'
    implementation 'com.joanzapata.iconify:android-iconify-fontawesome:2.1.0'
    implementation 'com.makeramen:roundedimageview:2.2.1'
    implementation 'com.splitwise:tokenautocomplete:2.0.7@aar'
    implementation 'com.squareup.okhttp:okhttp:2.4.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'fr.avianey.com.viewpagerindicator:library:2.4.1@aar'
    implementation 'jp.wasabeef:picasso-transformations:2.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
}

task checkstyle(type: Checkstyle) {
    configFile = new File(projectDir, "/config/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = new File(projectDir, "config/checkstyle/suppressions.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}


task pmd(type: Pmd, dependsOn: "assembleDebug") {
    ignoreFailures = false
    ruleSetFiles = files(new File(projectDir, "config/pmd/pmd-ruleset.xml"))
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.required = false
        html.required = true
        xml {
            destination = new File(buildDir, "reports/pmd/pmd.xml")
        }
        html {
            destination = new File(buildDir, "reports/pmd/pmd.html")
        }
    }
}

check.dependsOn 'checkstyle', 'lint', 'pmd'


