buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'checkstyle'
apply plugin: 'com.android.application'
apply plugin: 'findbugs'
apply plugin: 'io.fabric'
apply plugin: 'pmd'
apply plugin: 'com.google.gms.google-services'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
    maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "org.theotech.ceaselessandroid"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 10
        versionName "1.0.0"
        // blur effects https://android-arsenal.com/details/1/2192
        // Warning: Renderscript support mode is not currently supported with renderscript target 21+
        renderscriptTargetApi 20
        renderscriptSupportModeEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable 'PrivateResource',
                'MissingTranslation',
                'AllowBackup',
                'UselessLeaf',
                'UselessParent',
                'IconColors',
                'IconLocation',
                'IconDensities',
                'ButtonStyle',
                'HardcodedText',
                'RtlSymmetry',
                'RtlSymmetry',
                'RtlHardcoded'
    }
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true;
    }
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.android.support:cardview-v7:23.4.0'
    compile 'com.android.support:recyclerview-v7:23.4.0'
    compile 'com.github.codechimp-org.apprater:library:1.0.30'
    compile 'com.google.guava:guava:18.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.joanzapata.iconify:android-iconify-fontawesome:2.1.0'
    compile 'com.makeramen:roundedimageview:2.2.1'
    compile 'com.splitwise:tokenautocomplete:2.0.7@aar'
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'fr.avianey.com.viewpagerindicator:library:2.4.1@aar'
    compile 'io.realm:realm-android:0.84.2'
    compile 'jp.wasabeef:picasso-transformations:2.0.0'
    compile 'com.google.android.gms:play-services-analytics:9.0.0'
    compile 'com.commonsware.cwac:merge:1.1.+'
    compile 'com.android.support:support-v4:23.4.0'
}

task checkstyle(type: Checkstyle) {
    configProperties.checkstyleSuppressionsPath = new File(projectDir, "config/checkstyle/suppressions.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

task findbugs(type: FindBugs, dependsOn: assembleDebug) {
    ignoreFailures = false
    effort = "max"
    reportLevel = "low"
    classes = files(new File(buildDir, "intermediates/classes/debug/org/theotech/ceaselessandroid/"))
    excludeFilter = new File(projectDir, "config/findbugs/exclude-filter.xml")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination = new File(buildDir, "reports/findbugs/findbugs.xml")
        }
        html {
            destination = new File(buildDir, "reports/findbugs/findbugs.html")
        }
    }

    classpath = files()
}


task pmd(type: Pmd, dependsOn: assembleDebug) {
    ignoreFailures = false
    ruleSetFiles = files(new File(projectDir, "config/pmd/pmd-ruleset.xml"))
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination = new File(buildDir, "reports/pmd/pmd.xml")
        }
        html {
            destination = new File(buildDir, "reports/pmd/pmd.html")
        }
    }
}

check.dependsOn 'checkstyle', 'findbugs', 'lint', 'pmd'
